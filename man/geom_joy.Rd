% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geoms.R
\docType{data}
\name{geom_joy}
\alias{geom_joy}
\alias{GeomJoy}
\title{Joy plot based on ridgelines}
\usage{
geom_joy(mapping = NULL, data = NULL, stat = "density",
  position = "identity", na.rm = FALSE, show.legend = NA, scale = 1.8,
  rel_min_height = 0, inherit.aes = TRUE, ...)
}
\arguments{
\item{scale}{A scaling factor to scale the height of the ridgelines relative to the spacing between them.
A value of 1 indicates that the maximum point of any ridgeline touches the baseline right above, assuming
even spacing between baselines.}

\item{rel_min_height}{Lines with heights below this cutoff will be removed. The cutoff is measured relative to the
overall maximum, so `rel_min_height=0.01` would remove everything that is 1% or less than the highest point among all
joylines. Default is 0, so nothing is removed.}
}
\description{
`geom_joy` arranges multiple density plots in a staggered fashion, as in the cover of the famous Joy Division album.
}
\details{
By default, this geom calculates densities from the point data mapped onto the x axis. If density calculation is
not wanted, use `stat="identity"` or use `geom_ridgeline`. The difference between `geom_joy` and `geom_ridgeline`
is that `geom_joy` will provide automatic scaling of the ridgelines (controlled by the `scale` parameter), whereas
`geom_ridgeline` will plot the data as is.
}
\examples{
ggplot(iris, aes(x=Sepal.Length, y=Species, group=Species, height = ..density..)) +
  geom_joy(rel_min_height = 0.005) +
  scale_y_discrete(expand=c(0.01, 0)) +
  scale_x_continuous(expand=c(0.01, 0)) +
  theme_joy()


# set the scale argument in `geom_joy()` to determine how much overlap there is among the plots
ggplot(diamonds, aes(x=price, y=cut, group=cut, height=..density..)) +
  geom_joy(scale=4) +
  scale_y_discrete(expand=c(0.01, 0)) +
  scale_x_continuous(expand=c(0.01, 0)) +
  theme_joy()

# the same figure with fun colors
ggplot(diamonds, aes(x=price, y=cut, fill=cut, height=..density..)) +
  geom_joy(scale=4) +
  scale_y_discrete(expand=c(0.01, 0)) +
  scale_x_continuous(expand=c(0.01, 0)) +
  scale_fill_brewer(palette = 4) +
  theme_joy() + theme(legend.position="none")

# evolution of movie lengths over time
# requires the ggplot2movies package
library(ggplot2movies)
ggplot(movies[movies$year>1912,], aes(x=length, y=year, group=year, height=..density..)) +
  geom_joy(scale=10, size=0.25, rel_min_height=0.03) +
  theme_joy() +
  scale_x_continuous(limits=c(1, 200), expand=c(0.01, 0)) +
  scale_y_reverse(breaks=c(2000, 1980, 1960, 1940, 1920, 1900), expand=c(0.01, 0))
}
\keyword{datasets}
